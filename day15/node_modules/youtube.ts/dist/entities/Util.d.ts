/// <reference types="node" />
import stream from "stream";
import api from "../API";
import { YoutubeDownloadOptions, YoutubeVideo } from "../types";
export declare class Util {
    private readonly api;
    constructor(api: api);
    resolveID: (resolvable: string, type: string) => Promise<string>;
    downloadMyVideo: (videoResolvable: string, key: string, cookie: string, dest?: string) => Promise<string>;
    iteratePages: (searchResults: any, params: any, limit?: number) => Promise<any[]>;
    downloadMyVideos: (yourChannel: string, key: string, cookie: string, dest?: string, limit?: number) => Promise<string[]>;
    awaitStream: (writeStream: stream.Writable) => Promise<unknown>;
    downloadVideo: (videoResolvable: string, dest?: string, ytdlOptions?: YoutubeDownloadOptions) => Promise<string>;
    downloadVideos: (videos: string[] | YoutubeVideo[], dest?: string, ytdlOptions?: YoutubeDownloadOptions) => Promise<string[]>;
    downloadChannelVideos: (channelResolvable: string, dest?: string, ytdlOptions?: YoutubeDownloadOptions, limit?: number) => Promise<string[]>;
    downloadMP3: (videoResolvable: string, dest?: string) => Promise<string>;
    downloadMP3s: (videos: string[] | YoutubeVideo[], dest?: string) => Promise<string[]>;
    downloadChannelMP3s: (channelResolvable: string, dest?: string, limit?: number) => Promise<string[]>;
    streamMP3: (videoResolvable: string) => Promise<stream.Readable>;
    /**
     * Downloads the thumbnail of a youtube video.
     */
    downloadThumbnail: (videoResolvable: string, folder?: string) => Promise<string>;
    private readonly getVideo;
}
